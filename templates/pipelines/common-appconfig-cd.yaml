parameters:
- name: projectName
  type: string
- name: agentImage
  type: string
  default: 'ubuntu-latest'
- name: privateAgentName
  displayName: Name of the private agent
  type: string
  default: ''
- name: environments
  displayName: list of deployment env
  type: object
- name: appDeployConfig
  displayName: Details to deploy the app
  type: object
  default: null
  
stages:                   
  - ${{ each deploymentEnv in parameters.environments }}:
    - stage: ${{ deploymentEnv.name }}
      displayName: 'AppConfig CD ${{ deploymentEnv.name }}'
      variables:
            projectName: ${{ parameters.projectName }} 
      ${{ if ne(deploymentEnv.privateAgentName, '') }}:
        pool:
          name: ${{ deploymentEnv.privateAgentName }}
      ${{ else }}:
        pool:
          vmImage: ${{ coalesce(parameters.agentImage, 'ubuntu-latest') }}
      jobs:
        - job: DryRun${{ deploymentEnv.name }}
          displayName: 'DryRun ${{ deploymentEnv.name }}' 
          environment: ${{ deploymentEnv.name }}                
          steps:                
            - checkout: Self
              path: s/
            - task: replacetokens@5
              displayName: 'Replace tokens in config'
              inputs:
                tokenPattern: doublebraces
                targetFiles: |
                  $(Pipeline.Workspace)/s/${{ parameters.appDeployConfig.filepath }}/appConfig.${{ deploymentEnv.name }}.json
            - ${{ if ne(parameters.appDeployConfig, '') }}:
              - task: AzureAppConfigurationPush@6
                displayName: 'Import Azure App Configuration'
                inputs:
                  azureSubscription: ${{ deploymentEnv.serviceConnection }}
                  AppConfigurationEndpoint: 'https://${{ deploymentEnv.appConfiguration }}.azconfig.io'
                  ConfigurationFile: '$(Pipeline.Workspace)/s/${{ parameters.appDeployConfig.filepath }}/appConfig.${{ deploymentEnv.name }}.json'
                  FileContentProfile: appconfig/kvset
                  DryRun: true            
        - job: Review${{ deploymentEnv.name }}
          displayName: 'Review ${{ deploymentEnv.name }}'
          pool: server
          steps:
            - task: ManualValidation@0
              displayName: 'Manual Validation'
              inputs:
                notifyUsers: rajesh.venkatraman@capgemini.com
                instructions: verify
           
        - job: Publish${{ deploymentEnv.name }}
          displayName: 'Publish ${{ deploymentEnv.name }}' 
          environment: ${{ deploymentEnv.name }}    
          steps:                
            - checkout: Self
              path: s/
            - task: replacetokens@5
              displayName: 'Replace tokens in config'
              inputs:
                tokenPattern: doublebraces
                targetFiles: |
                  $(Pipeline.Workspace)/s/${{ parameters.appDeployConfig.filepath }}/appConfig.${{ deploymentEnv.name }}.json
            - task: AzureAppConfigurationPush@6
              displayName: 'Import Azure App Configuration'
              inputs:
                azureSubscription: ${{ deploymentEnv.serviceConnection }}
                AppConfigurationEndpoint: 'https://${{ deploymentEnv.appConfiguration }}.azconfig.io'
                ConfigurationFile: '$(Pipeline.Workspace)/s/${{ parameters.appDeployConfig.filepath }}/appConfig.${{ deploymentEnv.name }}.json'
                FileContentProfile: appconfig/kvset
                DryRun: false