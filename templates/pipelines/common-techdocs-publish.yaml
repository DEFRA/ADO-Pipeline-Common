parameters:
- name: config
  type: object
- name: environments
  type: object
- name: privateAgentName
  type: string

variables:
- name: IsDefaultBranchBuild
  value: ${{ or( in(variables['Build.SourceBranch'], 'refs/heads/main','refs/heads/master'), contains(variables['Build.SourceBranch'],'refs/tags') ) }}
- name: IsPrBuild
  value: ${{ eq(variables['Build.Reason'], 'PullRequest') }}
- name: PSHelperDirectory
  value: '$(Pipeline.Workspace)/s/ADO-Pipeline-Common/templates/powershell/modules/ps-helpers'
stages:
    - stage: Build
      displayName: 'Build'
      ${{ if ne(parameters.privateAgentName, '') }}:
        pool:
          name: ${{ parameters.privateAgentName }}
      ${{ if eq(parameters.privateAgentName, '') }}:
        pool:
          vmImage: ${{ coalesce(parameters.agentImage, 'ubuntu-latest') }}
      jobs:
        - job: Generate
          displayName: 'Generate'     
          steps:
            - ${{ if eq(parameters.config.WikiRepoName, '') }}:
              - checkout: self
                path: s/source
            - ${{ if ne(parameters.config.WikiRepoName, '') }}:
              - checkout: ${{ parameters.config.WikiRepoName }}
                path: s/source
            - checkout: PipelineCommon
              path: s/PipelineCommon
  
            - task: PowerShell@2
              inputs:
                targetType: filePath
                filePath: '$(Pipeline.Workspace)/s/ADO-Pipeline-Common/templates/powershell/build/PublishTechDocs.ps1'
                arguments: >
                 -Command 'Build' 
                 -SitePath $(System.ArtifactsDirectory)/site
                 -PSHelperDirectory ${{ variables.PSHelperDirectory }}
                pwsh: true
                failOnStderr: true
                workingDirectory: '$(Pipeline.Workspace)/s/source${{ parameters.config.DocsPath }}'
              displayName: 'Generate Docs'            
              name: Generate 
            - task: PublishPipelineArtifact@1
              displayName: 'Publish Artifacts'
              inputs:
                targetPath: '$(System.ArtifactsDirectory)/site'
                artifact: site      

    - ${{ each deploymentEnv in parameters.environments }}:      
      - stage: ${{ deploymentEnv.name }}
        dependsOn: ${{ deploymentEnv.dependsOn }}
        displayName: '${{ deploymentEnv.name }}'
        ${{ if ne(deploymentEnv.privateAgentName, '') }}:
          pool:
            name: ${{ deploymentEnv.privateAgentName }}
        ${{ else }}:
          pool:
            vmImage: ${{ coalesce(parameters.agentImage, 'ubuntu-latest') }}
        jobs:        
          - deployment: PublishTo${{ deploymentEnv.name }}
            displayName: 'Publish To ${{ deploymentEnv.name }}'
            environment: ${{ deploymentEnv.name }}
            strategy:
              runOnce:
                deploy:          
                  steps:
                    - task: DownloadPipelineArtifact@2
                      displayName: 'Download Docs' 
                      inputs:
                        artifactName: 'site'
                        targetPath: $(System.ArtifactsDirectory)/site
                    - checkout: PipelineCommon
                      path: s/PipelineCommon
                    - task: AzureCLI@2
                      inputs:
                        azureSubscription: ${{ deploymentEnv.serviceConnection }}
                        scriptType: pscore
                        scriptLocation: scriptPath
                        scriptPath: '$(Pipeline.Workspace)/s/ADO-Pipeline-Common/templates/powershell/build/PublishTechDocs.ps1'
                        arguments: > 
                          -Command 'Publish' 
                          -StorageAccountName ${{ deploymentEnv.StorageAccountName }}  
                          -ContainerName ${{ deploymentEnv.ContainerName }}  
                          -EntityName ${{ parameters.config.EntityName }}
                          -ResourceGroup ${{ deploymentEnv.resourceGroup }}
                          -SitePath $(System.ArtifactsDirectory)/site
                          -PSHelperDirectory ${{ variables.PSHelperDirectory }} 
                        addSpnToEnvironment: true          
                        failOnStandardError: false
                        workingDirectory: '$(Pipeline.Workspace)/s'
                      displayName: 'Publish Docs to Storage'                         
