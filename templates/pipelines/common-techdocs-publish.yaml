parameters:
- name: serviceName
  type: string
- name: repoName
  type: string
- name: deployFromFeature
  type: boolean
  default: false  
- name: environments
  type: object

variables:
- name: IsDefaultBranchBuild
  value: ${{ or( in(variables['Build.SourceBranch'], 'refs/heads/main','refs/heads/master'), contains(variables['Build.SourceBranch'],'refs/tags') ) }}
- name: IsPrBuild
  value: ${{ eq(variables['Build.Reason'], 'PullRequest') }}
- name: PSHelperDirectory
  value: '$(Pipeline.Workspace)/s/PipelineCommon/templates/powershell/modules/ps-helpers'

stages:                    
    - ${{ each deploymentEnv in parameters.environments }}:      
      - stage: ${{ deploymentEnv.name }}
        dependsOn: ${{ deploymentEnv.dependsOn }}
        displayName: '${{ deploymentEnv.name }}'
        variables:
        - name: PSHelperDirectory
          value: '$(Pipeline.Workspace)/s/PipelineCommon/templates/powershell/modules/ps-helpers'
        ${{ if ne(deploymentEnv.privateAgentName, '') }}:
          pool:
            name: ${{ deploymentEnv.privateAgentName }}
        ${{ else }}:
          pool:
            vmImage: ${{ coalesce(parameters.agentImage, 'ubuntu-latest') }}
        jobs:        
          - deployment: PublishTo${{ deploymentEnv.name }}
            displayName: 'Publish To ${{ deploymentEnv.name }}'
            environment: ${{ deploymentEnv.name }}
            strategy:
              runOnce:
                deploy:          
                  steps:
                    - checkout: ${{ parameters.repoName }}  
                      path: s/docs 
                    - checkout: PipelineCommon
                      path: s/PipelineCommon
                    - task: AzureCLI@2
                      inputs:
                        azureSubscription: ${{ deploymentEnv.serviceConnection }}
                        scriptType: pscore
                        scriptLocation: scriptPath
                        scriptPath: '$(Pipeline.Workspace)/s/PipelineCommon/templates/powershell/build/PublishTechDocs.ps1'
                        arguments: > 
                          -StorageAccountName ${{ deploymentEnv.StorageAccountName }}  
                          -ContainerName ${{ parameters.serviceName }}  
                          -ComponentName ${{ deploymentEnv.ContainerName }}
                          -ResourceGroup ${{ deploymentEnv.resourceGroup }}
                          -PSHelperDirectory ${{ variables.PSHelperDirectory }} 
                        addSpnToEnvironment: true          
                        failOnStandardError: false
                        workingDirectory: '$(Pipeline.Workspace)/s'
                      displayName: 'Publish Docs'                         
