parameters:
  - name: snykConnection
    type: string       
  - name: acrRepoName
    type: string   
  - name: snykOrganizationName
    type: string
  - name: failOnThreshold
    type: string
    default: 'high'
  - name: manifestPath
    type: string
    default: ''         
  - name: appBuildConfig
    type: object

steps:
- ${{ each projectManifestPath in split(parameters.manifestPath, ';') }}:
  - task: SnykSecurityScan@1
    displayName: 'Snyk Application scan'
    inputs:
      serviceConnectionEndpoint: ${{ parameters.snykConnection }} 
      testDirectory: '$(Build.SourcesDirectory)'      
      failOnIssues: true
      monitorOnBuild: false
      projectName: '${{ parameters.acrRepoName }}'
      organization: '${{ parameters.snykOrganizationName }}'
      ${{ if eq(parameters.appBuildConfig.appFrameworkType, 'java') }}:
        testType: code
        codeSeverityThreshold: 'medium'
      ${{ else  }}:        
        failOnThreshold: '${{ parameters.failOnThreshold }}'
        ${{ if ne(projectManifestPath, '') }}:
          targetFile: '${{ projectManifestPath }}'        
    enabled: true
    continueOnError: ${{ ne(variables['Build.Reason'], 'PullRequest') }}