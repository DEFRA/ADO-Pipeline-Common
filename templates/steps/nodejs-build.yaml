parameters:
  - name: frameworkVersion
    displayName: NodeJS Version
    type: string
    default: '18.x'    
  - name: packageFeedName
    type: string
    default: ''
  - name: failOnThreshold
    type: string
    default: 'moderate'    
steps:
- task: NodeTool@0
  displayName: 'Use Node ${{ parameters.frameworkVersion }} '
  inputs:
    versionSpec: 18.x
    checkLatest: true 
  enabled: false #this step takes long time to download nodejs file  
- task: Npm@1
  displayName: 'npm ci'
  inputs:
    command: custom
    customCommand: 'ci --legacy-peer-deps'
    verbose: false
    ${{ if ne(parameters.packageFeedName, '') }}:
      customRegistry: useFeed
      customFeed: ${{ parameters.packageFeedName }}
           
- task: Npm@1
  displayName: 'npm audit'
  inputs:
    command: custom
    verbose: false
    customCommand: 'audit -audit-level=${{ parameters.failOnThreshold }} ' 
  continueOnError: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

- task: Npm@1
  displayName: 'npm lint'
  inputs:
    command: custom
    verbose: false
    customCommand: 'run --if-present test:lint'
  continueOnError: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

- task: Npm@1
  displayName: 'npm build'
  inputs:
    command: custom
    verbose: false
    customCommand: 'run --if-present build'

- task: Npm@1
  displayName: 'npm unit test'
  inputs:
    command: custom
    verbose: false
    customCommand: 'run --if-present test:unit'

