parameters:
  - name: serviceName
  - name: IsPrBuild
    displayName: Is PR Build
    type: boolean
    default: false       
  - name: appTestConfig
    displayName: AppTestConfig
    type: object
  - name: isIntegration     
    type: boolean 
    default: false      
  - name: isServiceAcceptance     
    type: boolean 
    default: false  
  - name: isZap
    type: boolean 
    default: false
  - name: isPa11y
    type: boolean 
    default: false
  - name: isAxe
    type: boolean 
    default: false
  - name: isJmeter
    type: boolean 
    default: false
  - name: isAcceptance
    type: boolean 
    default: false
steps:
  - template: /templates/steps/additional-tools.yaml
    parameters:
      DockerCompose : true
      Pandoc: true

  - task: AzureCLI@2
    displayName: 'Provision Resources for Tests'
    inputs:
      azureSubscription: ${{ parameters.appTestConfig.serviceConnection }}
      scriptType: pscore
      scriptLocation: scriptPath
      scriptPath: '$(Pipeline.Workspace)/s/PipelineCommon/templates/powershell/test/Provision-Resources.ps1'
      arguments: > 
        -InfraChartHomeDir '$(Pipeline.Workspace)/s/helm/${{ parameters.serviceName }}-infra'
        -PipelineCommonDirectory '$(Pipeline.Workspace)/s/PipelineCommon'
        -ServiceName '${{ parameters.serviceName }}'
        -IsPrBuild '${{ parameters.IsPrBuild }}'
        -Environment '${{ parameters.appTestConfig.testEnvironment }}'
        -AzureServiceBusResourceGroup '${{ parameters.appTestConfig.azureServiceBusResourceGroup }}'
        -AzureServiceBusNamespace '${{ parameters.appTestConfig.azureServiceBusNamespace }}'
      addSpnToEnvironment: true
      failOnStandardError: false
      workingDirectory: '$(Pipeline.Workspace)/s'    
      
  - bash: 'env | sort'    

  # Run this task if './docker-compose.test.yaml' file present    
  # - ${{ if parameters.isIntegration }}:
  #   - template: /templates/steps/tests/integration-test.yaml
  #     parameters:
  #       service : '${{ parameters.serviceName }}'
  #       testDir : '$(Pipeline.Workspace)/s'
  #       testOutputDir: '$(Pipeline.Workspace)/s/test-output'

  # Run this task if './docker-compose.acceptance.yaml' file present    
  - ${{ if eq(parameters.isServiceAcceptance,'true' }}:
    - template: /templates/steps/tests/service-acceptance-test.yaml
      parameters:
        service : '${{ parameters.serviceName }}'
        testDir : '$(Pipeline.Workspace)/s'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output' 
  - ${{ if eq(parameters.isZap,'true') }}:
    - template: /templates/steps/tests/owasp-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
  - ${{ if eq(parameters.isPa11y,'true') }}:
    - template: /templates/steps/tests/accessibility-test-pa11y.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'         
  - ${{ if eq(parameters.isAxe,'true') }}:
    - template: /templates/steps/tests/accessibility-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
  - ${{ if eq(parameters.isJmeter,'true') }}:
    - template: /templates/steps/tests/performance-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s/test/performance'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
        scriptPath: '$(Pipeline.Workspace)/s/PipelineCommon/templates/scripts/jtl_junit_converter.py'     
  - ${{ if eq(parameters.isAcceptance,'true') }}:
    - template: /templates/steps/tests/acceptance-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
  # Need to verify when to delete resources? After Pre deployment or post deployment test?
  - task: AzureCLI@2
    displayName: 'Delete Dynamically provisioned resources'
    condition: always()
    inputs:
      azureSubscription: ${{ parameters.appTestConfig.serviceConnection }}
      scriptType: pscore
      scriptLocation: scriptPath
      scriptPath: '$(Pipeline.Workspace)/s/PipelineCommon/templates/powershell/test/Delete-Resources.ps1'
      arguments: > 
        -PipelineCommonDirectory '$(Pipeline.Workspace)/s/PipelineCommon'
        -ServiceName '${{ parameters.serviceName }}'
        -IsPrBuild '${{ parameters.IsPrBuild }}'
        -Environment '${{ parameters.appTestConfig.testEnvironment }}'
        -AzureServiceBusResourceGroup '${{ parameters.appTestConfig.azureServiceBusResourceGroup }}'
        -AzureServiceBusNamespace '${{ parameters.appTestConfig.azureServiceBusNamespace }}'
      addSpnToEnvironment: true
      failOnStandardError: false
      workingDirectory: '$(Pipeline.Workspace)/s'           