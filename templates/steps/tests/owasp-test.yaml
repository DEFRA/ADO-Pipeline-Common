parameters:
  - name: testDir
    type: string
  - name: testOutputDir
    type: string
  - name: typeOfTest
    type: string    
    default: 'PreDeploy'
  - name: url
    type: string
    default: ''
  - name: artifactNameSuffix
    type: string
    default: $(build.buildid)
  - name: continueOnError
    type: boolean
    default: false    
steps:  

  - pwsh: |
      if(Test-Path -Path "${{ parameters.testDir }}/docker-compose.zap.yaml"){
        Write-Output "##vso[task.setvariable variable=docker_compose_dot_zap_yaml]true"
      }
    displayName: OWASP Test - File Validation
  - ${{ if eq(parameters.typeOfTest,'PreDeploy') }}:
    - script: |
        sudo mkdir -p -m 777 ${{ parameters.testOutputDir }}
        sudo mkdir -p -m 777 ${{ parameters.testDir }}/zap
        export TEST_ENVIRONMENT_ROOT_URL=https://${{ parameters.url }}
        echo "TEST_ENVIRONMENT_ROOT_URL: ${TEST_ENVIRONMENT_ROOT_URL}"
        docker-compose -f docker-compose.yaml -f docker-compose.zap.yaml -p zap-baseline-scan down
        docker-compose -f docker-compose.yaml -f docker-compose.zap.yaml run --rm zap-baseline-scan
      displayName: OWASP Test - Run
      continueOnError: ${{ parameters.continueOnError }}
      condition: eq(variables.docker_compose_dot_zap_yaml, 'true')
  - ${{ if eq(parameters.typeOfTest,'PostDeploy') }}:
    - script: |
        sudo mkdir -p -m 777 ${{ parameters.testOutputDir }}
        sudo mkdir -p -m 777 ${{ parameters.testDir }}/zap
        export TEST_ENVIRONMENT_ROOT_URL=https://${{ parameters.url }}
        echo "TEST_ENVIRONMENT_ROOT_URL: ${TEST_ENVIRONMENT_ROOT_URL}"
        docker-compose -f docker-compose.yaml -f docker-compose.zap.yaml -p zap-baseline-scan down
        docker-compose -f docker-compose.yaml -f docker-compose.zap.yaml run --rm zap-baseline-scan
      displayName: OWASP Test - Run
      continueOnError: ${{ parameters.continueOnError }}
      condition: eq(variables.docker_compose_dot_zap_yaml, 'true')
  - task: PublishPipelineArtifact@1
    displayName: OWASP Test - Publish Test Report
    inputs:
      targetPath: ${{ parameters.testOutputDir }}/zap-report.html
      artifact: zap-results-${{ parameters.typeOfTest }}-${{ parameters.artifactNameSuffix }}
    continueOnError: true
    condition: eq(variables.docker_compose_dot_zap_yaml, 'true')

  # - task: LakshayKaushik.PublishHTMLReports.publishhtmlreport.publishhtmlreport@1
  #   displayName: OWASP Test - Publish Html Report
  #   inputs:
  #     htmlType: genericHTML
  #     htmlPath: '${{ parameters.testOutputDir }}/zap-report.html' 
  #   condition: eq(variables.docker_compose_dot_zap_yaml, 'true')        
