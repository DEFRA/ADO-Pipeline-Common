parameters:
  - name: service
    type: string
  - name: testDir
    type: string
  - name: testOutputDir
    type: string
  - name: typeOfTest
    type: string    
    default: 'PreDeploy'
  - name: url
    type: string
    default: ''
  - name: appBuildConfig
    type: object
    default: null
  - name: artifactNameSuffix
    type: string
    default: $(build.buildid)
  - name: continueOnError
    type: boolean
    default: false    
  - name: varGroup
    type: string

variables:
  varGroup: ${{ parameters.varGroup }}

steps:  
  - pwsh: |
      if(Test-Path -Path "${{ parameters.testDir }}/docker-compose.contract.test.yaml"){
        Write-Output "##vso[task.setvariable variable=docker_compose_contract_test_yaml]true"
      }
    displayName: Contract Test - File Validation
  - task: AzureKeyVault@2
    displayName: Read KV Secrets
    inputs:
      azureSubscription: ${{ parameters.appBuildConfig.keyVaultServiceConnection }}
      KeyVaultName: ${{ parameters.appBuildConfig.keyVaultName }}
      SecretsFilter: 'PACT-BROKER-URL,PACT-BROKER-USERNAME,PACT-BROKER-PASSWORD'
      RunAsPreJob: false
  - ${{ if eq(parameters.typeOfTest,'PreDeploy') }}:
    - script: |
        sudo mkdir -p -m 777 ${{ parameters.testOutputDir }}
        export PACT_BROKER_URL="$(PACT-BROKER-URL)"
        export PACT_BROKER_USERNAME="$(PACT-BROKER-USERNAME)"
        export PACT_BROKER_PASSWORD="$(PACT-BROKER-PASSWORD)"
        docker-compose -f docker-compose.yaml -f docker-compose.contract.test.yaml -p "${{ parameters.service }}-test" up --abort-on-container-exit
      displayName: Contract Test - Run
      continueOnError: ${{ parameters.continueOnError }}
      condition: eq(variables.docker_compose_contract_test_yaml, 'true')
  - ${{ if eq(parameters.typeOfTest,'PostDeploy') }}:
    - script: |
        sudo mkdir -p -m 777 ${{ parameters.testOutputDir }}
        export TEST_ENVIRONMENT_ROOT_URL=https://${{ parameters.url }}
        echo "TEST_ENVIRONMENT_ROOT_URL: ${TEST_ENVIRONMENT_ROOT_URL}"
        export PACT_BROKER_URL="$(PACT-BROKER-URL)"
        export PACT_BROKER_USERNAME="$(PACT-BROKER-USERNAME)"
        export PACT_BROKER_PASSWORD="$(PACT-BROKER-PASSWORD)"
        docker-compose -f docker-compose.yaml -f docker-compose.contract.test.yaml -p "${{ parameters.service }}-test" up --abort-on-container-exit
      displayName: Contract Test - Run
      continueOnError: ${{ parameters.continueOnError }}
      condition: eq(variables.docker_compose_contract_test_yaml, 'true')
  - task: PublishPipelineArtifact@1
    displayName: Contract Test - Publish Report
    inputs:
      targetPath: ${{ parameters.testOutputDir }}
      artifact: contract-results-${{ parameters.typeOfTest }}-${{ parameters.artifactNameSuffix }}
    continueOnError: true
    condition: eq(variables.docker_compose_contract_test_yaml, 'true')
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testRunTitle: 'Contract Test Result-${{ parameters.typeOfTest }}-${{ parameters.artifactNameSuffix }}'
      testResultsFiles: '${{ parameters.testOutputDir }}/junit.xml'
      failTaskOnFailedTests: ${{ not(parameters.continueOnError) }}
    displayName: 'Contract Test Publish Test Results'
    continueOnError: ${{ parameters.continueOnError }}
    condition: eq(variables.docker_compose_contract_test_yaml, 'true')
  - script: |
      docker-compose -f docker-compose.yaml -f docker-compose.contract.test.yaml -p "${{ parameters.service }}-test" down
    displayName: DockerDown
    continueOnError: true
    condition: eq(variables.docker_compose_contract_test_yaml, 'true')
