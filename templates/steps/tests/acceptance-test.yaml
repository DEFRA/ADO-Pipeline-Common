parameters:
  - name: testDir
    type: string
  - name: testOutputDir
    type: string
  - name: typeOfTest
    type: string    
    default: 'PreDeploy'
  - name: url
    type: string
    default: ''
steps:  

  - bash: |
      docker-compose --version
      sudo apt-get remove docker-compose
      VERSION=$(curl --silent https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*\d')
      DESTINATION=/usr/local/bin/docker-compose
      sudo curl -L https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-$(uname -s)-$(uname -m) -o $DESTINATION
      sudo chmod 755 $DESTINATION    
      docker-compose --version
    displayName: 'Update docker compose'
    enabled: true
  - powershell: Get-ChildItem -Path '${{ parameters.testOutputDir }}' -recurse -File -Force   
  - script: |
      sudo mkdir -p -m 777 ${{ parameters.testOutputDir }}/html-reports
      sudo chmod -R 777 ${{ parameters.testDir }}/app
    
      docker-compose -f docker-compose.yaml -f docker-compose.override.yaml run --service-ports --build -d --rm ffc-demo-web 

      echo '127.0.0.1 host.docker.internal' | sudo tee -a /etc/hosts
      IP_ADDRESS=$(ip addr show | grep "\binet\b.*\bdocker0\b" | awk '{print $2}' | cut -d '/' -f 1)
      echo ${IP_ADDRESS}
      export TEST_ENVIRONMENT_ROOT_URL=http://${IP_ADDRESS}:3000
      cd test/acceptance
      docker-compose build
      docker-compose -f docker-compose.yaml -f docker-compose.override.yaml up --abort-on-container-exit
    displayName: Acceptance - Run Tests
    condition: ${{ eq(parameters.typeOfTest,'PreDeploy') }}

  - script: |
      sudo mkdir -p -m 777 ${{ parameters.testOutputDir }}/html-reports
      #sudo chmod -R 777 ${{ parameters.testDir }}/app

      export TEST_ENVIRONMENT_ROOT_URL=https://${{ parameters.url }}
      echo $TEST_ENVIRONMENT_ROOT_URL
      cd test/acceptance
      docker-compose build
      docker-compose -f docker-compose.yaml -f docker-compose.override.yaml up --abort-on-container-exit
    displayName: Acceptance - Run Tests
    condition: ${{ eq(parameters.typeOfTest,'PostDeploy') }}

  - pwsh: | 
      $htmlfile="${{ parameters.testOutputDir }}/html-reports/acceptance-test-suite-report.html" 
      $mdfile="$(System.ArtifactsDirectory)/acceptance-test-suite-report.md" 
      pandoc $htmlfile -o $mdfile 
      Write-Host "##vso[task.addattachment type=Distributedtask.Core.Summary;name=AcceptanceTestReport;]$mdfile" 
    displayName: Acceptance - Attach Summary

  - task: PublishPipelineArtifact@1
    displayName: Acceptance - Publish Test Report
    inputs:
      targetPath: ${{ parameters.testOutputDir }}/html-reports
      artifact: $(build.buildid)-acceptance-results
    