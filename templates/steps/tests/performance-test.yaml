parameters:
  - name: testDir
    type: string
  - name: testOutputDir
    type: string
  - name: typeOfTest
    type: string    
    default: 'PreDeploy'
  - name: url
    type: string
    default: ''
  - name: scriptPath
    type: string
steps:  

  - pwsh: |
      sudo mkdir -p -m 777 ${{ parameters.testOutputDir }}/performance/htmlreport
      sudo chmod -R 777 ${{ parameters.testOutputDir }}/performance
      cd ${{ parameters.testDir }} 
      docker-compose -f ../../docker-compose.yaml -f docker-compose.jmeter.yaml run jmeter-test
    displayName: JMeter - Run Tests

  - script: |
      JMETER_RESULTS=${{ parameters.testOutputDir }}/performance/testresults.jtl
      JUNIT_RESULTS=${{ parameters.testOutputDir }}/performance/testresults.xml
      python3 ${{ parameters.scriptPath }} $JMETER_RESULTS $JUNIT_RESULTS
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Convert JMeter Results to JUnit Format'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testRunTitle: 'Performance Test Result'
      testResultsFiles: '${{ parameters.testOutputDir }}/performance/testresults.xml'
      failTaskOnFailedTests: true
    displayName: 'Publish Performance Test Results'

  - task: PublishPipelineArtifact@1
    displayName: JMeter - Publish Test Report
    inputs:
      targetPath: ${{ parameters.testOutputDir }}/performance
      artifact: $(build.buildid)-jmeter-results
      
  # - task: LakshayKaushik.PublishHTMLReports.publishhtmlreport.publishhtmlreport@1
  #   displayName: Publish Html Report
  #   inputs:
  #     htmlType: Jmeter
  #     JmeterReportsPath: '${{ parameters.testOutputDir }}/performance/htmlreport'    