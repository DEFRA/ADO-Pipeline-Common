parameters:
- name: dryRun
  type: boolean
  default: true
- name: environmentObj
  displayName: deployment env
  type: object
- name: appDeployConfig
  displayName: Details to deploy the app
  type: object
  default: null
- name: workingDirectory
  type: string
- name: serviceName
  type: string
- name: PSHelperDirectory
  type: string
- name: AppConfigModuleDirectory
  type: string     
steps:
  - checkout: Self
    path: s/ 
  - checkout: PipelineCommon
    path: s/PipelineCommon

  - ${{ if and( ne(parameters.appDeployConfig, ''), ne(parameters.appDeployConfig.filetype, 'yaml')) }}:      
    # - task: PowerShell@2
    #   displayName: 'Validate Config File'
    #   inputs:
    #     targetType: filePath
    #     filePath: '$(Pipeline.Workspace)/s/PipelineCommon/templates/powershell/build/ValidateConfigFile.ps1'
    #     arguments: -SchemaFilePath '$(Pipeline.Workspace)/s/PipelineCommon/templates/config/schema.json'  -ConfigFilePath '${{ parameters.appDeployConfig.filepath }}/appConfig.${{ parameters.environmentObj.name }}.json'
    #     failOnStderr: true
    #     pwsh: true
    #     workingDirectory: '$(Pipeline.Workspace)/s'

    - task: replacetokens@5
      displayName: 'Replace tokens in config'
      inputs:
        tokenPattern: doublebraces
        inlineVariables: |
          subscriptionId: ${{ parameters.environmentObj.subscriptionId }}
          keyvaultName: ${{ parameters.environmentObj.appKeyVault }}
          serviceName: ${{ parameters.serviceName }}
          env: ${{ parameters.environmentObj.name }}
          keyVaultContentType: "application/vnd.microsoft.appconfig.keyvaultref+json;charset=utf-8"
          resourceid: 'uri":"https://${{ parameters.environmentObj.appKeyVault }}.vault.azure.net/secrets'
        targetFiles: |
          ${{ parameters.workingDirectory }}/${{ parameters.appDeployConfig.filepath }}/appConfig.${{ parameters.environmentObj.name }}.json
          $(Pipeline.Workspace)/s/PipelineCommon/templates/config/schema.json

    - task: AzureCLI@2
      displayName: 'Import Azure App Configuration '
      inputs:
        azureSubscription: '${{ parameters.environmentObj.serviceConnection}}'
        scriptType: pscore
        scriptLocation: scriptPath
        scriptPath: '$(Pipeline.Workspace)/s/PipelineCommon/templates/powershell/build/ImportAppConfig.ps1'
        arguments: > 
          -AppConfig '${{ parameters.environmentObj.appConfiguration }}' 
          -ServiceName '${{ parameters.serviceName }}' 
          -ConfigFilePath '${{ parameters.appDeployConfig.filepath }}/appConfig.${{ parameters.environmentObj.name }}.json'
          -SchemaFilePath '$(Pipeline.Workspace)/s/PipelineCommon/templates/config/schema.json'
          -KeyVault '${{ parameters.environmentObj.appKeyVault }}'
          -PSHelperDirectory ${{ parameters.PSHelperDirectory }} 
          -AppConfigModuleDirectory ${{ parameters.AppConfigModuleDirectory }} 
        addSpnToEnvironment: true          
        failOnStandardError: false
        workingDirectory: '$(Pipeline.Workspace)/s'    

    
    # - task: AzureCLI@2
    #   displayName: 'Delete Unused Keys'
    #   inputs:
    #     azureSubscription: '${{ parameters.environmentObj.serviceConnection}}'
    #     scriptType: pscore
    #     scriptLocation: scriptPath
    #     scriptPath: '$(Pipeline.Workspace)/s/PipelineCommon/templates/powershell/build/DeleteUnusedKeys.ps1'
    #     arguments: > 
    #       -AppConfig '${{ parameters.environmentObj.appConfiguration }}' 
    #       -ServiceName '${{ parameters.serviceName }}' 
    #       -ConfigFilePath '${{ parameters.appDeployConfig.filepath }}/appConfig.${{ parameters.environmentObj.name }}.json'
    #       -PSHelperDirectory ${{ parameters.PSHelperDirectory }} 
    #     addSpnToEnvironment: true          
    #     failOnStandardError: false
    #     workingDirectory: '$(Pipeline.Workspace)/s'
  - ${{ if and( ne(parameters.appDeployConfig, ''), eq(parameters.appDeployConfig.filetype, 'yaml')) }}:  
    - task: replacetokens@5
      displayName: 'Replace tokens in config'
      inputs:
        tokenPattern: doublebraces
        inlineVariables: |
          serviceName: ${{ parameters.serviceName }}
          env: ${{ parameters.environmentObj.name }}
        targetFiles: |
          ${{ parameters.workingDirectory }}/${{ parameters.appDeployConfig.filepath }}/appConfig.${{ parameters.environmentObj.name }}.yaml
    - task: AzureCLI@2
      displayName: 'Import Azure App Configuration '
      inputs:
        azureSubscription: '${{ parameters.environmentObj.serviceConnection}}'
        scriptType: pscore
        scriptLocation: scriptPath
        scriptPath: '$(Pipeline.Workspace)/s/PipelineCommon/templates/powershell/build/ImportAppConfig.ps1'
        arguments: > 
          -AppConfig '${{ parameters.environmentObj.appConfiguration }}' 
          -ServiceName '${{ parameters.serviceName }}' 
          -ConfigFilePath '${{ parameters.appDeployConfig.filepath }}/appConfig.${{ parameters.environmentObj.name }}.yaml'
          -SchemaFilePath '$(Pipeline.Workspace)/s/PipelineCommon/templates/config/schema.json'
          -KeyVault '${{ parameters.environmentObj.appKeyVault }}'
          -PSHelperDirectory ${{ parameters.PSHelperDirectory }} 
          -AppConfigModuleDirectory ${{ parameters.AppConfigModuleDirectory }} 
        addSpnToEnvironment: true          
        failOnStandardError: false
        workingDirectory: '$(Pipeline.Workspace)/s'      