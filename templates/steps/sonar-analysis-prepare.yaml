parameters:
  - name: sonarConfig
    type: object
  - name: appBuildConfig
    type: object
  - name: appVersion
    type: string
  - name: appRootDir
    type: string

steps:
- task: PowerShell@2
  displayName: "Setup SonarCloud Project"
  name: SetupSonarCloudProject
  inputs:
    filePath: $(Agent.BuildDirectory)/s/ADO-Pipeline-Common/templates/powershell/build/Set-SonarCloud.ps1
    arguments: >
      -RepositoryName ${{ parameters.sonarConfig.projectKeyPrefix }}${{ parameters.appBuildConfig.imageRepoName}}
      -SonarKey $(SONAR-API-KEY)
    failOnStderr: true
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    pwsh: true

- task: SonarCloudPrepare@2
  displayName: 'Prepare Sonar analysis'
  inputs:
    SonarCloud: ${{ parameters.sonarConfig.sonarConnection }}
    organization: ${{ parameters.sonarConfig.organization }}
    ${{ if eq(parameters.appBuildConfig.appFrameworkType, 'dotnet') }}:
      scannerMode: MSBuild
      projectKey: ${{ parameters.sonarConfig.projectKeyPrefix }}${{ parameters.appBuildConfig.imageRepoName}}
      projectName: ${{ parameters.sonarConfig.projectKeyPrefix }}${{ parameters.appBuildConfig.imageRepoName}}
      projectVersion: ${{ parameters.appVersion}}
      ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
        extraProperties: |
          sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
          sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
          sonar.cs.vscoveragexml.reportsPaths=$(Agent.TempDirectory)/**/*.coverage
          sonar.exclusions=**/obj/**,**/*.Tests.csproj,**/Migrations/*
          sonar.qualitygate.wait=true
      ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
        extraProperties: |
          sonar.pullrequest.key=$(System.PullRequest.PullRequestNumber)
          sonar.pullrequest.branch=$(System.PullRequest.SourceBranch)
          sonar.pullrequest.base=$(System.PullRequest.TargetBranch)
          sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
          sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
          sonar.cs.vscoveragexml.reportsPaths=$(Agent.TempDirectory)/**/*.coverage
          sonar.exclusions=**/obj/**,**/*.Tests.csproj,**/Migrations/*
          sonar.qualitygate.wait=true

    ${{ if eq(parameters.appBuildConfig.appFrameworkType, 'nodejs') }}:
      scannerMode: CLI
      configFile: '${{ parameters.appRootDir}}/sonar-project.properties'
      ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
        extraProperties: |
          sonar.projectKey=${{ parameters.sonarConfig.projectKeyPrefix }}${{ parameters.appBuildConfig.imageRepoName}}
          sonar.projectName=${{ parameters.sonarConfig.projectKeyPrefix }}${{ parameters.appBuildConfig.imageRepoName}}
          sonar.projectVersion=${{ parameters.appVersion}}
          sonar.javascript.lcov.reportPaths=${{ parameters.appRootDir}}/${{ parameters.sonarConfig.nodejs.lcovReportPaths }}
          sonar.coverage.jacoco.xmlReportPaths=${{ parameters.appRootDir}}/${{ parameters.sonarConfig.nodejs.xmlReportPaths }}
      ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
        extraProperties: |
          sonar.projectKey=${{ parameters.sonarConfig.projectKeyPrefix }}${{ parameters.appBuildConfig.imageRepoName}}
          sonar.projectName=${{ parameters.sonarConfig.projectKeyPrefix }}${{ parameters.appBuildConfig.imageRepoName}}
          sonar.projectVersion=${{ parameters.appVersion}}
          sonar.javascript.lcov.reportPaths=${{ parameters.appRootDir}}/${{ parameters.sonarConfig.nodejs.lcovReportPaths }}
          sonar.coverage.jacoco.xmlReportPaths=${{ parameters.appRootDir}}/${{ parameters.sonarConfig.nodejs.xmlReportPaths }}
          sonar.pullrequest.key=$(System.PullRequest.PullRequestNumber)
          sonar.pullrequest.branch=$(System.PullRequest.SourceBranch)
          sonar.pullrequest.base=$(System.PullRequest.TargetBranch)
