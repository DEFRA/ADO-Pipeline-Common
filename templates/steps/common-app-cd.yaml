parameters:
- name: serviceName
  type: string
- name: agentImage
  type: string
  default: 'ubuntu-latest'
- name: environmentObj
  displayName: deployment env
  type: object
- name: appBuildConfig
  displayName: Details to build the app
  type: object
- name: appDeployConfig
  displayName: Details to deploy the app
  type: object
  default: null
- name: PSHelperDirectory
  type: string 
- name: stepsToSkip
  type: string   
  default: ''

steps:

  - checkout: Self
    path: s/
  - checkout: PipelineCommon
    path: s/ADO-Pipeline-Common
    
  - task: DownloadPipelineArtifact@2
    displayName: 'Download App Version' 
    inputs:
      artifactName: 'appversion'
      targetPath: $(System.ArtifactsDirectory)/version

  - task: PowerShell@2
    displayName: 'Get App Version' 
    name: GetAppVersion   
    inputs:
      targetType: filePath
      filePath: '$(Pipeline.Workspace)/s/ADO-Pipeline-Common/templates/powershell/build/GetSet-CodeVersion.ps1'
      arguments: -Command "Get" -ArtifactFilePath  $(System.ArtifactsDirectory)/version
      failOnStderr: false      
      pwsh: true
      workingDirectory: '$(Pipeline.Workspace)/s'  

  - ${{ if not(contains(parameters.stepsToSkip, 'BuildDockerImage')) }}:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Docker image' 
      inputs:
        artifactName: 'docker'
        targetPath: '$(Pipeline.Workspace)/docker'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download Helm Chart' 
    inputs:
      artifactName: 'helm'
      targetPath: '$(Pipeline.Workspace)/helm'   
        
  - ${{ if not(contains(parameters.stepsToSkip, 'BuildDockerImage')) }}:
    - task: AzureCLI@2                   
      inputs:
        azureSubscription: ${{ parameters.environmentObj.serviceConnection }}
        scriptType: pscore
        scriptLocation: scriptPath
        scriptPath: '$(Pipeline.Workspace)/s/ADO-Pipeline-Common/templates/powershell/build/BuildAndPushDockerImage.ps1'
        arguments: > 
          -AcrName ${{ parameters.environmentObj.acrName }} 
          -AcrRepoName "${{ parameters.appBuildConfig.imageRepoName }}" 
          -ImageVersion  $(GetAppVersion.appVersion) 
          -ImageCachePath $(Pipeline.Workspace)/docker 
          -DockerFilePath '${{ parameters.appBuildConfig.dockerfilePath }}'
          -Command "push" 
          -PSHelperDirectory ${{ parameters.PSHelperDirectory }}
        addSpnToEnvironment: true          
        failOnStandardError: false
        workingDirectory: '$(Pipeline.Workspace)/s'
      displayName: 'Docker Push Image'
      
  - task: AzureCLI@2
    inputs:
      azureSubscription: ${{ parameters.environmentObj.serviceConnection }}
      scriptType: pscore
      scriptLocation: scriptPath
      scriptPath: '$(Pipeline.Workspace)/s/ADO-Pipeline-Common/templates/powershell/build/HelmLintAndPublish.ps1'
      arguments: > 
        -AcrName ${{ parameters.environmentObj.acrName }}  
        -ChartVersion $(GetAppVersion.appVersion) 
        -ChartCachePath $(Pipeline.Workspace)/helm 
        -Command "publish" 
        -PSHelperDirectory ${{ parameters.PSHelperDirectory }} 
        -chartHomeDir '$(Pipeline.Workspace)/s/helm'
        -KeyVaultVSecretNames '$(secretVariableNamesJson)' 
        -ServiceName ${{ parameters.serviceName }}
      addSpnToEnvironment: true          
      failOnStandardError: false
      workingDirectory: '$(Pipeline.Workspace)/s'
    displayName: 'Helm Publish' 
        