parameters:
  - name: url
    type: string
  - name: testEnvs
    type: object
  - name: envName
    type: string
steps:
  - template: /templates/steps/additional-tools.yaml
    parameters:
      DockerCompose : true
  - ${{ if contains(parameters.testEnvs.integrationTests, parameters.envName) }}:
    - template: /templates/steps/tests/integration-test.yaml
      parameters:
        service : '${{ parameters.serviceName }}'
        testDir : '$(Pipeline.Workspace)/s'
        typeOfTest: 'PostDeploy'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
  - ${{ if contains(parameters.testEnvs.serviceAcceptanceTests, parameters.envName) }}:
    - template: /templates/steps/tests/service-acceptance-test.yaml
      parameters:
        service : '${{ parameters.serviceName }}'
        testDir : '$(Pipeline.Workspace)/s'
        typeOfTest: 'PostDeploy'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output' 
  - ${{ if contains(parameters.testEnvs.owaspTests, parameters.envName) }}:
    - template: /templates/steps/tests/owasp-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s'
        typeOfTest: 'PostDeploy'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'     
  - ${{ if contains(parameters.testEnvs.performanceTests, parameters.envName) }}:
    - template: /templates/steps/tests/performance-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s/test/performance'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
        typeOfTest: 'PostDeploy'
        scriptPath: '$(Pipeline.Workspace)/s/ADO-Pipeline-Common/templates/scripts/jtl_junit_converter.py'
        url: ${{ parameters.url }}
  - ${{ each testEnvTags in parameters.testEnvs.acceptanceTests }}:
    - ${{ if contains(testEnvTags.env, parameters.envName) }}:
      - template: /templates/steps/tests/acceptance-test.yaml
        parameters:
          testDir : '$(Pipeline.Workspace)/s'
          testOutputDir: '$(Pipeline.Workspace)/s/test-output'
          typeOfTest: 'PostDeploy'
          url: ${{ parameters.url }}
          tags: ${{ testEnvTags.tags }}
  - ${{ if contains(parameters.testEnvs.accessibilityTests, parameters.envName) }}:
    - template: /templates/steps/tests/accessibility-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
        typeOfTest: 'PostDeploy'
        url: ${{ parameters.url }}