parameters:
  - name: url
    type: string
  - name: testEnvs
    type: object
  - name: envName
    type: string
  - name: serviceName
    type: string
  - name: appBuildConfig
    type: object
  - name: appTestConfig
    type: object
steps:
  - template: /templates/steps/additional-tools.yaml
    parameters:
      DockerCompose : true
  - pwsh: |
      $datestring=Get-Date -Format yyyyMMdd-hhmm
      Write-Output "##vso[task.setvariable variable=rundatestring]$datestring"
    displayName: Get Run Date String
  - ${{ if and(contains(parameters.testEnvs.integrationTests, parameters.envName),contains(parameters.appTestConfig.postDeployTest.testsToRun,'integration')) }}:
    - template: /templates/steps/tests/integration-test.yaml
      parameters:
        service : '${{ parameters.serviceName }}'
        testDir : '$(Pipeline.Workspace)/s'
        typeOfTest: 'PostDeploy'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output' 
        appBuildConfig: ${{ parameters.appBuildConfig }}
        artifactNameSuffix: ${{ parameters.envName }}-${{ variables.rundatestring }}
  - ${{ if and(contains(parameters.testEnvs.serviceAcceptanceTests, parameters.envName),contains(parameters.appTestConfig.postDeployTest.testsToRun,'service-acceptance')) }}:
    - template: /templates/steps/tests/service-acceptance-test.yaml
      parameters:
        service : '${{ parameters.serviceName }}'
        testDir : '$(Pipeline.Workspace)/s'
        typeOfTest: 'PostDeploy'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
        artifactNameSuffix: ${{ parameters.envName }}-${{ variables.rundatestring }}
  - ${{ if and(contains(parameters.testEnvs.owaspTests, parameters.envName),contains(parameters.appTestConfig.postDeployTest.testsToRun,'owasp')) }}:
    - template: /templates/steps/tests/owasp-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s'
        typeOfTest: 'PostDeploy'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
        artifactNameSuffix: ${{ parameters.envName }}-${{ variables.rundatestring }}
  - ${{ if and(contains(parameters.testEnvs.performanceTests, parameters.envName),contains(parameters.appTestConfig.postDeployTest.testsToRun,'performance')) }}:
    - template: /templates/steps/tests/performance-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s/test/performance'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
        typeOfTest: 'PostDeploy'
        scriptPath: '$(Pipeline.Workspace)/s/ADO-Pipeline-Common/templates/scripts/jtl_junit_converter.py'
        url: ${{ parameters.url }}
        artifactNameSuffix: ${{ parameters.envName }}-${{ variables.rundatestring }}
  - ${{ each testEnvTags in parameters.testEnvs.acceptanceTests }}:
    - ${{ if and(contains(testEnvTags.env, parameters.envName),contains(parameters.appTestConfig.postDeployTest.testsToRun,'acceptance')) }}:
      - template: /templates/steps/tests/acceptance-test.yaml
        parameters:
          testDir : '$(Pipeline.Workspace)/s'
          testOutputDir: '$(Pipeline.Workspace)/s/test-output'
          typeOfTest: 'PostDeploy'
          url: ${{ parameters.url }}
          tags: ${{ testEnvTags.tags }}
          artifactNameSuffix: ${{ parameters.envName }}-${{ variables.rundatestring }}
  - ${{ if and(contains(parameters.testEnvs.accessibilityTests, parameters.envName),contains(parameters.appTestConfig.postDeployTest.testsToRun,'accessibility')) }}:
    - template: /templates/steps/tests/accessibility-test.yaml
      parameters:
        testDir : '$(Pipeline.Workspace)/s'
        testOutputDir: '$(Pipeline.Workspace)/s/test-output'
        typeOfTest: 'PostDeploy'
        url: ${{ parameters.url }}
        artifactNameSuffix: ${{ parameters.envName }}-${{ variables.rundatestring }}